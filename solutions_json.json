{
  "inventory": [
    "rfl",
    "[anonymous]",
    "nth_rewrite",
    "repeat",
    "rw",
    "MyNat.four_eq_succ_three",
    "MyNat.one_eq_succ_zero",
    "MyNat.three_eq_succ_two",
    "MyNat.two_eq_succ_one",
    "MyNat",
    "MyNat.add_zero",
    "Add",
    "MyNat.add_succ",
    "MyNat.succ_eq_add_one",
    "induction",
    "MyNat.zero_add",
    "MyNat.succ_add",
    "MyNat.add_comm",
    "MyNat.add_assoc",
    "MyNat.add_right_comm",
    "MyNat.mul_succ",
    "MyNat.mul_zero",
    "Mul",
    "MyNat.mul_one",
    "MyNat.zero_mul",
    "MyNat.succ_mul",
    "MyNat.mul_comm",
    "MyNat.one_mul",
    "MyNat.two_mul",
    "MyNat.mul_add",
    "MyNat.add_mul",
    "MyNat.mul_assoc",
    "MyNat.pow_zero",
    "Pow",
    "MyNat.zero_pow_zero",
    "MyNat.pow_succ",
    "MyNat.zero_pow_succ",
    "MyNat.pow_one",
    "MyNat.one_pow",
    "MyNat.pow_two",
    "MyNat.pow_add",
    "MyNat.mul_pow",
    "MyNat.pow_pow",
    "MyNat.add_sq",
    "exact",
    "apply",
    "MyNat.succ_inj",
    "intro",
    "MyNat.zero_ne_succ",
    "MyNat.zero_ne_one",
    "symm",
    "MyNat.ne_succ_self",
    "MyNat.add_right_cancel",
    "MyNat.add_left_cancel",
    "MyNat.add_left_eq_self",
    "MyNat.add_right_eq_self",
    "cases",
    "tauto",
    "MyNat.eq_zero_of_add_right_eq_zero",
    "MyNat.eq_zero_of_add_left_eq_zero",
    "MyNat.add_left_comm",
    "simp",
    "simp_add",
    "MyNat.pred_succ",
    "MyNat.is_zero_succ",
    "MyNat.is_zero_zero",
    "MyNat.succ_ne_zero",
    "contrapose",
    "MyNat.succ_ne_succ",
    "decide",
    "use",
    "MyNat.le_refl",
    "MyNat.zero_le",
    "MyNat.le_succ_self",
    "MyNat.le_trans",
    "MyNat.le_zero",
    "MyNat.le_antisymm",
    "left",
    "right",
    "MyNat.le_total",
    "LE",
    "MyNat.succ_le_succ",
    "MyNat.le_one",
    "MyNat.le_two",
    "MyNat.mul_le_mul_right",
    "MyNat.mul_left_ne_zero",
    "MyNat.eq_succ_of_ne_zero",
    "MyNat.one_le_of_ne_zero",
    "MyNat.le_mul_right",
    "have",
    "MyNat.mul_right_eq_one",
    "MyNat.mul_ne_zero",
    "MyNat.mul_eq_zero",
    "MyNat.mul_right_eq_self"
  ],
  "openedIntro": true,
  "data": {
    "Tutorial": {
      "1": {
        "code": "rfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 2,
            "selectionStartColumn": 1,
            "positionLineNumber": 2,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "2": {
        "code": "rw [h]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "3": {
        "code": "rw [two_eq_succ_one, one_eq_succ_zero]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "4": {
        "code": "rw [← one_eq_succ_zero, ← two_eq_succ_one]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "5": {
        "code": "rw [add_zero c]\nrw [add_zero b]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 1,
            "positionLineNumber": 4,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "6": {
        "code": "repeat rw [add_zero]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "7": {
        "code": "rw [one_eq_succ_zero, add_succ, add_zero]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "8": {
        "code": "nth_rewrite 2 [two_eq_succ_one]\nrw [add_succ, one_eq_succ_zero, add_succ, add_zero, ← three_eq_succ_two, ← four_eq_succ_three]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 1,
            "positionLineNumber": 4,
            "positionColumn": 1
          }
        ],
        "help": []
      }
    },
    "Addition": {
      "1": {
        "code": "induction n with m hn\nrw [add_zero]\nrfl\n\nrw [add_succ, hn]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 7,
            "selectionStartColumn": 1,
            "positionLineNumber": 7,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "2": {
        "code": "induction b with n hn\nrw [add_zero, add_zero]\nrfl\n\nrw [add_succ, hn, add_succ]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 7,
            "selectionStartColumn": 1,
            "positionLineNumber": 7,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "3": {
        "code": "induction b with n hn\n\nrw [add_zero, zero_add]\nrfl\n\nrw [add_succ, succ_add, hn]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 8,
            "selectionStartColumn": 1,
            "positionLineNumber": 8,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "4": {
        "code": "induction c with n hn\nrw [add_zero, add_zero]\nrfl\n\nrw [add_succ, hn, add_succ, add_succ]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 7,
            "selectionStartColumn": 1,
            "positionLineNumber": 7,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "5": {
        "code": "rw [add_assoc]\nrw [add_comm b c]\nrw [← add_assoc]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 1,
            "positionLineNumber": 5,
            "positionColumn": 1
          }
        ],
        "help": []
      }
    },
    "Multiplication": {
      "1": {
        "code": "rw [one_eq_succ_zero, mul_succ, mul_zero, zero_add]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "2": {
        "code": "induction m with n hn\n\nrw [mul_zero]\nrfl\n\nrw [mul_succ, add_zero, hn]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 8,
            "selectionStartColumn": 1,
            "positionLineNumber": 8,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "3": {
        "code": "induction b with n hn\n\nrw [mul_zero, mul_zero, add_zero]\nrfl\n\nrw [mul_succ, hn, mul_succ, succ_eq_add_one, succ_eq_add_one]\nrw [← add_assoc, ← add_assoc, add_assoc (a * n), add_comm n a, ← add_assoc]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 9,
            "selectionStartColumn": 1,
            "positionLineNumber": 9,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "4": {
        "code": "induction b with c hc\n\nrw [mul_zero, zero_mul]\nrfl\n\nrw [mul_succ, hc, succ_mul]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 8,
            "selectionStartColumn": 1,
            "positionLineNumber": 8,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "5": {
        "code": "rw [mul_comm, mul_one]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "6": {
        "code": "rw [two_eq_succ_one, succ_mul, one_mul]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "7": {
        "code": "induction c with d hd\n\nrw [add_zero, mul_zero, add_zero]\nrfl\n\nrw [add_succ, mul_succ, hd, mul_succ, ← add_assoc]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 8,
            "selectionStartColumn": 1,
            "positionLineNumber": 8,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "8": {
        "code": "rw [mul_comm, mul_add, mul_comm, mul_comm c b]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "9": {
        "code": "induction c with d hd\n\nrw [mul_zero, mul_zero, mul_zero]\nrfl\n\nrw [mul_succ, hd, mul_succ, mul_add]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 8,
            "selectionStartColumn": 1,
            "positionLineNumber": 8,
            "positionColumn": 1
          }
        ],
        "help": []
      }
    },
    "Power": {
      "1": {
        "code": "rw [pow_zero]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "2": {
        "code": "rw [pow_succ]\nrw [mul_zero]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 1,
            "positionLineNumber": 4,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "3": {
        "code": "rw [one_eq_succ_zero, pow_succ, pow_zero, one_mul]\nrfl",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 2,
            "selectionStartColumn": 4,
            "positionLineNumber": 2,
            "positionColumn": 4
          }
        ],
        "help": []
      },
      "4": {
        "code": "induction m with n hn\n\nrw [pow_zero]\nrfl\n\nrw [pow_succ, hn, mul_one]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 8,
            "selectionStartColumn": 1,
            "positionLineNumber": 8,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "5": {
        "code": "rw [two_eq_succ_one, pow_succ, pow_one]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "6": {
        "code": "induction n with k hk\n\nrw [add_zero, pow_zero, mul_one]\nrfl\n\nrw [add_succ, pow_succ, hk, pow_succ, ← mul_assoc]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 8,
            "selectionStartColumn": 1,
            "positionLineNumber": 8,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "7": {
        "code": "induction n with m hm\n\nrw [pow_zero, pow_zero, pow_zero, one_mul]\nrfl\n\nrw [pow_succ, hm, pow_succ, pow_succ, ← mul_assoc, ← mul_assoc]\nrw [mul_assoc (a ^ m) a]\nrw [mul_comm a]\nrw [← mul_assoc]\nrfl",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 10,
            "selectionStartColumn": 4,
            "positionLineNumber": 10,
            "positionColumn": 4
          }
        ],
        "help": []
      },
      "8": {
        "code": "induction n with k hk\n\nrw [pow_zero, mul_zero, pow_zero]\nrfl\n\nrw [pow_succ, hk, mul_succ, pow_add]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 8,
            "selectionStartColumn": 1,
            "positionLineNumber": 8,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "9": {
        "code": "nth_rewrite 1 [pow_two]\nrw [mul_add, add_mul, add_mul]\nrw [← pow_two]\nrw [← add_assoc]\nrw [mul_comm b a]\nrw [add_assoc (a ^ 2)]\nrw [← two_mul]\nrw [← pow_two]\nrw [add_assoc]\nrw [← mul_assoc]\nrw [add_comm (2 * a * b)]\nrw [← add_assoc]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 14,
            "selectionStartColumn": 1,
            "positionLineNumber": 14,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "10": {
        "code": "",
        "completed": false,
        "selections": [],
        "help": []
      }
    },
    "Implication": {
      "1": {
        "code": "exact h1",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 1,
            "selectionStartColumn": 9,
            "positionLineNumber": 1,
            "positionColumn": 9
          }
        ],
        "help": []
      },
      "2": {
        "code": "repeat rw [zero_add] at h\nexact h\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "3": {
        "code": "apply h2\nexact h1",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 2,
            "selectionStartColumn": 9,
            "positionLineNumber": 2,
            "positionColumn": 9
          }
        ],
        "help": []
      },
      "4": {
        "code": "rw [four_eq_succ_three] at h\nrw [one_eq_succ_zero] at h\nrw [add_succ] at h\nrw [add_zero] at h\napply succ_inj\nexact h\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 7,
            "selectionStartColumn": 1,
            "positionLineNumber": 7,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "5": {
        "code": "apply succ_inj\nrw [succ_eq_add_one]\nrw [← four_eq_succ_three]\nexact h",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 8,
            "positionLineNumber": 4,
            "positionColumn": 8
          }
        ],
        "help": []
      },
      "6": {
        "code": "intro h\nexact h\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "7": {
        "code": "intro h\napply succ_inj\nrepeat rw [succ_eq_add_one]\nexact h\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 1,
            "positionLineNumber": 5,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "8": {
        "code": "apply h2\nexact h1\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "9": {
        "code": "intro h\nrw [one_eq_succ_zero] at h\napply zero_ne_succ at h\nexact h\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 1,
            "positionLineNumber": 5,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "10": {
        "code": "symm\nexact zero_ne_one\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "11": {
        "code": "intro h\nrw [add_succ, add_succ, add_zero] at h\nrepeat apply succ_inj at h\napply zero_ne_succ at h\nexact h",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 8,
            "positionLineNumber": 1,
            "positionColumn": 1
          }
        ],
        "help": []
      }
    },
    "AdvAddition": {
      "1": {
        "code": "induction n with m h\napply zero_ne_succ\nintro h'\napply succ_inj at h'\napply h\nexact h'\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 7,
            "selectionStartColumn": 1,
            "positionLineNumber": 7,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "2": {
        "code": "induction n with m h\n\nintro h\nrepeat rw [add_zero] at h\nexact h\n\nintro h₁ \napply h\nrepeat rw [add_succ] at h₁\napply succ_inj at h₁\nexact h₁\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 12,
            "selectionStartColumn": 1,
            "positionLineNumber": 12,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "3": {
        "code": "intro h\nrw [add_comm, add_comm n b] at h\napply add_right_cancel at h\nexact h\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 1,
            "positionLineNumber": 5,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "4": {
        "code": "intro h\nnth_rewrite 2 [← zero_add y] at h\napply add_right_cancel at h\nexact h\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 1,
            "positionLineNumber": 5,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "5": {
        "code": "rw [add_comm]\napply add_left_eq_self y x\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 1,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "6": {
        "code": "cases b with d\nrw [add_zero]\nintro h\nexact h\n\nrw [add_succ]\nintro h\nby_contra h'\napply zero_ne_succ\nexact h.symm",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 10,
            "selectionStartColumn": 13,
            "positionLineNumber": 1,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "7": {
        "code": "rw [add_comm]\napply eq_zero_of_add_right_eq_zero b a\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      }
    },
    "Algorithm": {
      "1": {
        "code": "repeat rw [← add_assoc]\nrw [add_comm b a]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 1,
            "positionLineNumber": 4,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "2": {
        "code": "repeat rw [add_assoc]\nrw [add_comm b]\nrw [add_assoc]\nrfl",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 4,
            "positionLineNumber": 4,
            "positionColumn": 4
          }
        ],
        "help": []
      },
      "3": {
        "code": "simp only [add_assoc, add_left_comm, add_comm]\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 2,
            "selectionStartColumn": 1,
            "positionLineNumber": 2,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "4": {
        "code": "simp_add",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 1,
            "selectionStartColumn": 9,
            "positionLineNumber": 1,
            "positionColumn": 9
          }
        ],
        "help": []
      },
      "5": {
        "code": "rw [← pred_succ a, ← pred_succ b]\nrw [h]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 1,
            "positionLineNumber": 4,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "6": {
        "code": "intro h\nrw [← is_zero_succ a]\nrw [h]\ntauto\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 1,
            "positionLineNumber": 5,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "7": {
        "code": "contrapose! h\nrw [← pred_succ n, ← pred_succ m]\nrw [h]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 1,
            "positionLineNumber": 5,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "8": {
        "code": "decide",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 1,
            "selectionStartColumn": 7,
            "positionLineNumber": 1,
            "positionColumn": 7
          }
        ],
        "help": []
      },
      "9": {
        "code": "decide",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 1,
            "selectionStartColumn": 7,
            "positionLineNumber": 1,
            "positionColumn": 7
          }
        ],
        "help": []
      }
    },
    "LessOrEqual": {
      "1": {
        "code": "use 0\nrw [add_zero]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 4,
            "positionLineNumber": 3,
            "positionColumn": 4
          }
        ],
        "help": []
      },
      "2": {
        "code": "use x\nrw [zero_add]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 4,
            "positionLineNumber": 3,
            "positionColumn": 4
          }
        ],
        "help": []
      },
      "3": {
        "code": "use 1\nrw [← succ_eq_add_one]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 4,
            "positionLineNumber": 3,
            "positionColumn": 4
          }
        ],
        "help": []
      },
      "4": {
        "code": "cases hxy with a ha\ncases hyz with b hb\nuse (a + b)\nrw [← add_assoc, ← ha, ← hb]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 6,
            "selectionStartColumn": 1,
            "positionLineNumber": 6,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "5": {
        "code": "cases hx with a ha\nexact add_right_eq_zero x a ha.symm\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 2,
            "selectionStartColumn": 36,
            "positionLineNumber": 1,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "6": {
        "code": "cases hxy with a ha\ncases hyx with b hb\nrw [ha]\nrw [ha, add_assoc] at hb\nsymm at hb\napply add_right_eq_self at hb\napply add_right_eq_zero at hb\nrw [hb, add_zero]\nrfl",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 9,
            "selectionStartColumn": 4,
            "positionLineNumber": 9,
            "positionColumn": 4
          }
        ],
        "help": []
      },
      "7": {
        "code": "cases h with h1 h2\nright\nexact h1\nleft\nexact h2\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 9,
            "positionLineNumber": 5,
            "positionColumn": 9
          }
        ],
        "help": []
      },
      "8": {
        "code": "induction y with d hd\n-- base case\nright\nexact zero_le x\n-- general case\ncases hd with h1 h2\nleft\ncases h1 with a ha\nuse (a + 1)\nrw [succ_eq_add_one, ha, ← add_assoc]\nrfl\ncases h2 with a ha\ninduction a \nleft\nuse 1\nrw [ha, add_zero, succ_eq_add_one]\nrfl\nright\nuse n\nrw [ha, succ_eq_add_one, succ_eq_add_one, add_comm n 1, ← add_assoc]\nrfl\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 22,
            "selectionStartColumn": 1,
            "positionLineNumber": 22,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "9": {
        "code": "cases hx with d hd\nuse d\nrw [succ_add] at hd\napply succ_inj at hd\nexact hd\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 9,
            "positionLineNumber": 1,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "10": {
        "code": "cases x with y\n· left\n  rfl\n· rw [one_eq_succ_zero] at hx\n  apply succ_le_succ at hx\n  apply le_zero at hx\n  rw [hx]\n  right\n  rw [one_eq_succ_zero]\n  rfl\n  ",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 10,
            "selectionStartColumn": 6,
            "positionLineNumber": 10,
            "positionColumn": 6
          }
        ],
        "help": []
      },
      "11": {
        "code": "cases x with y\n· left\n  rfl\n· cases y with z\n  · right\n    left\n    rw [← one_eq_succ_zero]\n    rfl\n  · rw [two_eq_succ_one, one_eq_succ_zero] at hx\n    apply succ_le_succ at hx\n    apply succ_le_succ at hx\n    apply le_zero at hx\n    rw [hx]\n    right\n    right\n    rw [← one_eq_succ_zero, ← two_eq_succ_one]\n    rfl",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 17,
            "selectionStartColumn": 8,
            "positionLineNumber": 1,
            "positionColumn": 1
          }
        ],
        "help": []
      }
    },
    "AdvMultiplication": {
      "1": {
        "code": "cases h with d hd\nuse d * t\nrw [hd, add_mul]\nrfl",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 4,
            "positionLineNumber": 4,
            "positionColumn": 4
          }
        ],
        "help": []
      },
      "2": {
        "code": "contrapose! h\nrw [h, mul_zero]\nrfl",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 4,
            "positionLineNumber": 3,
            "positionColumn": 4
          }
        ],
        "help": []
      },
      "3": {
        "code": "cases a with d\ncontrapose ha\ntauto\nuse d\nrfl",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 6,
            "positionLineNumber": 3,
            "positionColumn": 6
          }
        ],
        "help": []
      },
      "4": {
        "code": "cases eq_succ_of_ne_zero a ha\nrw [h, one_eq_succ_zero]\nuse w\nrw [succ_add, zero_add]\nrfl",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 4,
            "positionLineNumber": 5,
            "positionColumn": 4
          }
        ],
        "help": []
      },
      "5": {
        "code": "apply mul_left_ne_zero at h\napply one_le_of_ne_zero at h\napply mul_le_mul_right 1 b a at h\nrw [one_mul, mul_comm] at h\nexact h",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 8,
            "positionLineNumber": 5,
            "positionColumn": 8
          }
        ],
        "help": []
      },
      "6": {
        "code": "have h2 : x * y ≠ 0 := by\n  rw [h]\n  exact one_ne_zero\napply le_mul_right at h2\nrw [h] at h2\napply le_one at h2\ncases h2 with h0 h1\n· rw [h0, zero_mul] at h\n  tauto\n· exact h1",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 10,
            "selectionStartColumn": 11,
            "positionLineNumber": 10,
            "positionColumn": 11
          }
        ],
        "help": []
      },
      "7": {
        "code": "apply eq_succ_of_ne_zero at ha\napply eq_succ_of_ne_zero at hb\ncases ha with pa ha\ncases hb with pb hb\nrw [ha, hb, mul_succ, add_succ]\nsymm\nexact zero_ne_succ _",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 7,
            "selectionStartColumn": 21,
            "positionLineNumber": 7,
            "positionColumn": 21
          }
        ],
        "help": []
      },
      "8": {
        "code": "have h2 := mul_ne_zero a b\ntauto",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 2,
            "selectionStartColumn": 6,
            "positionLineNumber": 2,
            "positionColumn": 6
          }
        ],
        "help": [
          0
        ]
      },
      "9": {
        "code": "induction b with d hd generalizing c\n· rw [mul_zero] at h\n  symm at h\n  apply mul_eq_zero at h\n  cases h with ha hc\n  · tauto\n  · exact hc.symm\n· cases c with e\n  · rw [mul_succ, mul_zero] at h\n    apply add_left_eq_zero at h\n    tauto\n  · rw [mul_succ, mul_succ] at h\n    apply add_right_cancel at h\n    apply hd at h\n    rw [h]\n    rfl\n",
        "completed": false,
        "selections": [
          {
            "selectionStartLineNumber": 17,
            "selectionStartColumn": 1,
            "positionLineNumber": 17,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "10": {
        "code": "nth_rewrite 2 [← mul_one a] at h\nexact mul_left_cancel a b 1 ha h",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 1,
            "selectionStartColumn": 1,
            "positionLineNumber": 1,
            "positionColumn": 1
          }
        ],
        "help": []
      }
    }
  },
  "difficulty": 2,
  "typewriterMode": true
}